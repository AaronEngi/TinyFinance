<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
<!ENTITY gpl SYSTEM "gpl.xml">
<!ENTITY fdl SYSTEM "fdl-1.3.xml">
]>
<book version="5.0" xsi:schemaLocation="http://www.w3.org/1999/xlink " xml:id="top"
      xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:ns5="http://www.w3.org/2000/svg" xmlns:ns4="http://www.w3.org/1998/Math/MathML"
      xmlns:ns3="http://www.w3.org/1999/xhtml" xmlns:db="http://docbook.org/ns/docbook">
  <info>
    <mediaobject>
      <imageobject>
        <imagedata fileref="../images/jgnash-logo-small.png"/>
      </imageobject>
    </mediaobject>

    <title>jGnash 2.11.x User Guide</title>

    <copyright>
      <year>2001-2012</year>

      <holder>Craig Cavanaugh</holder>
    </copyright>

    <legalnotice xml:id="legalnotice">
      <para>jGnash comes with<emphasis role="bold">ABSOLUTELY NO WARRANTY</emphasis>.</para>

      <para>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General
      Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option)
      any later version.</para>

      <para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
      implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the <link linkend="gpl">GNU General
      Public License </link> for more details.</para>

      <para>You should have received a copy of the GNU General Public License along with this program. If not, see
      http://www.gnu.org/licenses/</para>
    </legalnotice>

    <legalnotice xml:id="legalnotice2">
      <para>Permission is granted to copy, distribute and/or modify this document under the terms of the GNU Free
      Documentation License, Version 1.3 or any later version published by the Free Software Foundation; with no
      Invariant Sections, no Front-Cover Texts and no Back-Cover Texts.</para>

      <para>A copy of the license is included in the section entitled<link linkend="fdl">"GNU Free Documentation
      License"</link>.</para>
    </legalnotice>

    <legalnotice>
      <para><trademark class="registered">Linux</trademark> is the registered trademark of Linus Torvalds in the U.S.
      and other countries. Windows is a registered trademark of Microsoft Corporation in the United States and other
      countries. <trademark class="trade">Java</trademark> and <trademark>OpenJDK</trademark> are registered trademarks
      of Sun in the United States and other countries.</para>
    </legalnotice>
  </info>

  <chapter xml:id="Introduction">
    <title>Introduction</title>

    <para><mediaobject>
        <imageobject>
          <imagedata fileref="../images/jgnash-logo-small.png" scale="75"/>
        </imageobject>
      </mediaobject> jGnash is an open source application for personal finances. jGnash enables you to record detailed
    account and transaction information using proven double entry accounting principles.</para>

    <para>You do not have to be an accountant to understand or use jGnash.</para>

    <para>jGnash is not intended for use as a business accounting application. If you require business specific
    features, you may be better served looking for a different solution.</para>

    <section>
      <title>Installation</title>

      <para>jGnash is not currently distributed with an automatic installation tool. You will be required to perform a
      couple of manual operations that are easily performed for those with a basic understanding of how to use a zip
      file. Also, you must have <trademark>Java</trademark> 6 or newer installed on your computer.</para>

      <para>Java can be downloaded and installed from<link xlink:href="http://java.com">http://java.com</link>. Java
      installation is a simple matter of downloading the correct version for your operating system and using the
      automated installer.</para>

      <sidebar>
        <para>If you are using a <trademark class="registered">Linux</trademark> based operating system, <trademark
        class="trade">OpenJDK </trademark> or IcedTea may have been preinstalled. jGnash will run on the latest version
        of OpenJDK or IcedTea, but you may experience some minor glitches with the appearance of jGnash depending on the
        version installed and fonts available.</para>

        <para>If in doubt, install Java 6 or newer and configure your system accordingly.</para>
      </sidebar>

      <para>After Java is installed, you are ready to install jGnash. Simply open the zip file and extract the
      <filename>jGnash</filename> directory and it's complete contents to a directory of your choice, and do not alter
      the files or locations. I usually create a directory named "bin" in my home directory and keep the
      <filename>jGnash</filename> directory in it to better organize my computer. When upgrading between versions of
      jGnash, do not unzip to the same location and overwrite the existing files. Use a new location or delete the
      existing files first.</para>
    </section>

    <section>
      <title>Starting jGnash</title>

      <para>After the <filename>jGnash</filename> directory has been extracted from the zip file, you should see several
      files in the directory. Of interest at this point are the jar and exe files.</para>

      <para>If you are running on a <trademark class="registered">Windows</trademark> based computer, you can simply
      double click on the <filename>jGnash2.exe</filename> file to start jGnash. If you want, you can also double click
      on the <filename>jGnash2.jar</filename> file as an alternate means for starting the application.</para>

      <para>If you are running on a Unix based system you can start jGnash from a terminal as shown below.
      Alternatively, you can create your own application launcher in your desktop environment of choice.</para>

      <para><screen>java -jar jGnash2.jar</screen>jGnash has several advanced features such as running as a portable
      application or using jGnash as a multi-user home networked application. These advanced features are accessible via
      the command line. Please see <link linkend="commandline">Command Line Options</link> for more details.</para>
    </section>

    <section>
      <title>Running for the First Time</title>

      <para>A license acceptance screen will be displayed the first time you start jGnash. jGnash will not run unless
      the license is accepted. The short of the license agreement is jGnash is a freely available program comprised of
      other freely available software, and should anything bad happen during use, the authors involved are not libel for
      any damages. The license also details how jGnash may be distributed and used.</para>

      <sidebar>
        <para>If the license agreement sounds daunting, take a look at the license agreements of commercially available
        personal finance applications and you will see a similar agreement. Myself and just about every other person
        making software available for free or purchase tries their best to ensure the software they create works well
        and as intended. Sometimes bugs do creep in and it does not work quite as planned. The advantage of free
        software is you generally have direct access to the authors, and you have a much larger voice in helping the
        application grow and evolve over time.</para>
      </sidebar>
    </section>

    <section>
      <title>Getting Help and Giving Back</title>

      <para>The intent of this user guide is to get you off to a good start using jGnash. Despite my best attempts,
      there are those who need a little bit of extra help or have a special need or circumstance and require the help of
      others that have already been around the block a few times.</para>

      <para>The best place to start is the jGnash user group hosted at<link
      xlink:href="http://groups.google.com/group/jgnash-user"> http://groups.google.com/group/jgnash-user</link>. The
      user group contains a well rounded group of individuals who can help answer just about any question. As a courtesy
      to others, I encourage you to search the group prior to asking a question to see if it's already been
      answered.</para>

      <para>If you have found a bug, or have suggestions for improvement, the group page has links to a bug and feature
      request tracker that can be used to log and track your requests. The group forum can be used to post a bug or
      request, but use of the tracker ensures the request is not lost in the mix of discussions.</para>

      <para>If you are well versed in use of jGnash and other personal finance applications, you are encouraged to give
      back a little time and contribute your experience to the group and help others.</para>
    </section>
  </chapter>

  <chapter>
    <title>Getting Started</title>

    <para>Every account is assigned a currency and every transaction is associated with at least one account.</para>

    <para>Transactions are used to record daily expenditures as well as income from the sale of personal items,
    investments, or paychecks.</para>

    <para>Most of the effort involved in getting started with jGnash is creating a personalized income and expense
    account structure that best suits your needs.</para>

    <para>If you are familiar with other personal finance applications, you may notice that jGnash uses income and
    expense <emphasis>accounts</emphasis> instead of income and expense<emphasis>categories</emphasis>. Functionally,
    there is no difference, other than jGnash allows you see a detailed transaction register of the income and expense
    accounts as easily as you would look at your bank accounts.</para>

    <section xml:id="newFile">
      <title>Creating a New File</title>

      <para>When you start jGnash for the first time, you will be presented with a very simple screen. At the bottom of
      the screen, program notifications and memory consumption information are displayed.</para>

      <bridgehead>Creating a new file is done in 5 steps using the wizard</bridgehead>

      <orderedlist>
        <listitem>
          <para>Create a new file using the <menuchoice>
              <guimenu>File</guimenu>

              <guimenuitem>New</guimenuitem>
            </menuchoice> command and follow the prompts in the new file wizard. When given the choice to select the
          <link linkend="FileTypes">storage type</link>, leave it as the default value for now. A default filename and
          location will be provided that you can change if desired. If the file already exists, you will be warned you
          are about to overwrite it.</para>
        </listitem>

        <listitem>
          <para>After selecting the storage type and filename, you will be asked to choose the default currency. The
          default currency can be changed at a latter time, and if for some reason your currency of choice is not
          available, you can create a custom currency and set it as the default after the file is created.</para>
        </listitem>

        <listitem>
          <para>Next you can choose the currencies that are available for use. Currencies may be added and removed as
          needed at a later time if needed.</para>

          <para>If needed, custom currencies may be added using the <menuchoice>
              <guimenu>Currencies</guimenu>

              <guimenuitem>Add/Remove</guimenuitem>
            </menuchoice> command. As locales change, default currency availability will change as Java is updated. The
          typical need for a custom currency is to support legacy accounting information as countries standardize on the
          Euro.</para>

          <!--Link to a section detail currency dialog usage-->
        </listitem>

        <listitem>
          <para>After choosing the available currencies, default accounts can be selected if desired. If you are new to
          personal finance software, the defaults will be a good starting point. The accounts structure can be easily
          changed as needed to accommodate your own personal needs.</para>
        </listitem>

        <listitem>
          <para>The last step is the Summary page of the wizard. Verify everything is to your liking and click on the
          Finish button to create your new file.</para>
        </listitem>
      </orderedlist>

      <para>After the file is created, you are now ready to change, add, or remove accounts as need and begin entering
      transactions.</para>

      <sidebar>
        <para>Encryption and password protection options do not exist in jGnash with the exception of a clear text
        password for client/server operation. Encryption becomes a sticky subject when it involves exporting and
        distributing software throughout the world. jGnash is designed to support many nationalities, so control of
        distribution would be become very difficult if encryption was integrated.</para>

        <para>If you do have the desire to encrypt your jGnash data, the best choice is to use the encryption
        capabilities of your operating system or install a freely available third party encryption tool.</para>
      </sidebar>
    </section>

    <section xml:id="accounts">
      <title>Accounts</title>

      <para>Accounts are what you use to organize how you spend your money and where it comes from. Account structure
      can be changed to organize the display of information to suit your specific needs.</para>

      <para>Typically, you will have a separate jGnash account for each savings, checking, investment account, etc. that
      you have at a financial institution. Accounts can be organized under "placeholder" accounts to add different
      levels of organization.</para>

      <para>For example, if you would like to see a summary of your accounts by financial institution, you can create a
      placeholder account that represents a single financial institution and group your savings and checking accounts
      from that particular institution.</para>

      <para>Maybe you want to see all savings accounts grouped together and checking accounts grouped together. It's
      just a mater of creating placeholder accounts for checking and savings and placing the respective accounts under
      them.</para>

      <para>The account structure can be easily changed at any time with the exception of removing accounts after they
      have transaction in them. Transactions must be manually deleted from an account before you can remove it.</para>

      <section xml:id="NewAccount">
        <title>Creating Accounts</title>

        <para>A new account is created by clicking on the <guibutton>New</guibutton> button in the account list
        view.</para>

        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../images/new-account.png" scale="75"/>
            </imageobject>
          </inlinemediaobject>
        </para>

        <para>A new dialog box will be displayed that allows you to create a new account to suit your particular
        needs.</para>

        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../images/account-dialog.png" scale="65"/>
            </imageobject>
          </inlinemediaobject>
        </para>

        <bridgehead>Account Information</bridgehead>

        <variablelist>
          <varlistentry>
            <term>Name</term>

            <listitem>
              <para>The name for the account. The name will be used to identify the account when creating transactions.
              Account names do not have to be unique, but may not be left blank.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Description</term>

            <listitem>
              <para>A description for the account. This field may be left blank if desired.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Account ID</term>

            <listitem>
              <para>The Account ID can be a bank account number, another helpful description, or it could be an
              accounting code of some sort. This field may be left blank if desired.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Currency</term>

            <listitem>
              <para>The currency for the account. Account currencies cannot be changed if the account contains
              transactions.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Account Type</term>

            <listitem>
              <para>Account Type determines what the account can be used for and the type of transactions that can be
              created. An Account's type may be changed after it is created to another type only if it is similar in
              function. For example, an Investment Account can be change to a Mutual Fund account and vice-versa, buy
              they may not be changed into Bank or Credit accounts.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Account Options</term>

            <listitem>
              <para>
                <variablelist>
                  <varlistentry>
                    <term>Locked</term>

                    <listitem>
                      <para>If selected, the account will be locked and further changes will be prevented. This is
                      useful to lock accounts that have been closed while retaining your historical data.</para>
                    </listitem>
                  </varlistentry>

                  <varlistentry>
                    <term>Placeholder</term>

                    <listitem>
                      <para>If selected, child accounts may be placed under this account and the account will not accept
                      transactions. This is useful for organizing accounts into a hierarchical structure.</para>
                    </listitem>
                  </varlistentry>

                  <varlistentry>
                    <term>Hide Account</term>

                    <listitem>
                      <para>If selected, the account is hidden from view if the hide account filter is enabled.<!--Need to describe view filter workings--></para>
                    </listitem>
                  </varlistentry>
                </variablelist>
              </para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Parent Account</term>

            <listitem>
              <para>Clicking on this button will display a dialog that lets you select the account this account resides
              under. If you want the account to be placed at the top most level, then choose the Root account as the
              parent. Parent accounts may be changed as needed to suit your needs.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Notes</term>

            <listitem>
              <para>Room for extra information about the account if desired.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>At any later time, the <guibutton>Modify</guibutton> button may be used to change an existing account. If
        the account contains transactions, certain options may not be changed.</para>

        <sidebar>
          <para>jGnash does not have a place to specify an opening balance in keeping with correct practices for double
          entry accounting.</para>

          <para>However, it is still possible to set and opening balance. To add an opening balance, create a
          transaction with an appropriate deposit or withdrawal against an Equity Account of your choice. Most people
          will choose or create an "Opening Balance" account. This follows well known accounting practices. If you are
          not concerned about correct accounting practices, you can create an Adjustment Transaction instead.</para>
        </sidebar>
      </section>
    </section>

    <section xml:id="AccountTypes">
      <title>Account Types</title>

      <para>jGnash offers several account types to make organization easier. The account type chosen can have a
      significant impact on how reports are generated and displayed, and the types of transactions you can
      create.</para>

      <section>
        <title>Asset</title>

        <para>Asset accounts are intended to be used to track the value of durable items such as houses, cars, boats,
        collections, etc. Value of items can be adjusted over time against Income accounts to show gain or loss of
        value. If you were to sell an item and convert it cash, the sale of the item can be tracked against the Asset
        accounts containing the item.</para>
      </section>

      <section>
        <title>Bank</title>

        <para>Bank accounts are used for the savings accounts you would have at a bank.</para>
      </section>

      <section>
        <title>Cash</title>

        <para>Cash accounts represent the cash you carry with you. Cash accounts are also good for representing deposits
        and withdrawals from Flexible Spending Accounts.</para>
      </section>

      <section>
        <title>Checking</title>

        <para>Checking accounts are used for the checking account you would have at a bank.</para>
      </section>

      <section>
        <title>Credit</title>

        <para>Credit accounts are used to record purchases and payments made to a credit card account. Credit accounts
        are primary used for short-term liabilities and great for representing overdraft and line of credit accounts at
        banks.</para>
      </section>

      <section>
        <title>Equity</title>

        <para>Equity accounts are used to record opening account balances against. Typically, you will have only one
        Equity account. Equity accounts are representative of another accounts net worth at the time you begin tracking
        it's value.</para>
      </section>

      <section>
        <title>Expense</title>

        <para>Expense accounts are used to record expenses such as food, utilities, taxes, investment expenses,
        etc.</para>
      </section>

      <section>
        <title>Income</title>

        <para>Income accounts are used to record income such as salary, dividends, investment income, etc.</para>
      </section>

      <section>
        <title>Investment</title>

        <para>Investment accounts are used to buy and sell Securities. Investment accounts can be used to track 401k,
        IRA's, etc.</para>

        <itemizedlist>
          <listitem>
            <para>Investment Accounts have a cash balance if you buy or sell transactions against the account.</para>
          </listitem>

          <listitem>
            <para>Investment purchases and sales fees can be made against the cash balance of the investment account or
            other specified accounts.</para>
          </listitem>

          <listitem>
            <para>Multiple investment fee entries per transaction may be entered.</para>
          </listitem>

          <listitem>
            <para>Multiple gains/loss entries per transaction may be entered.</para>
          </listitem>

          <listitem>
            <para>Investment Accounts support multiple securities.</para>
          </listitem>

          <listitem>
            <para>Investment Accounts can be used to model an on-line brokerage account.</para>
          </listitem>
        </itemizedlist>
      </section>

      <section>
        <title>Liability</title>

        <para>Liability accounts are used to track long term loans or liabilities. Liability accounts have the added
        feature of allowing you to set-up a loan payment that takes some of the effort out of entering periodic loan
        payment transactions.</para>
      </section>

      <section>
        <title>Mutual Fund</title>

        <para>Mutual fund accounts are a specialized version of an Investment account and generally used to track mutual
        fund type investments.</para>
      </section>
      
      <section>
        <title>Simple Investment</title>

        <para>Simple investment accounts are for investments where you do not actively manage or are able to track purchases
        and sales of securities.  The typical scenario would be a company pension plan that only provides cash balance
        information.  Sometimes, these types of investment accounts are called Annuities or Guaranteed Retirement Accounts</para>
      </section>

      <section>
        <title>Root</title>

        <para>The root account is the top level account that holds all other accounts. You cannot remove or modify the
        root account. Normally, it is not visible unless you are changing the account structure.</para>
      </section>
    </section>

    <section xml:id="Editing">
      <title>Editing Environment</title>

      <para>The jGnash editing environment is not much different then in other application with the exception that it
      provides a few shortcuts to speed up entry of transactions.</para>

      <para>jGnash knows and understands just about any known locale and country setting. Depending on your settings,
      the decimal symbol will change accordingly as well as the displayed format of dates.</para>

      <section xml:id="dateFields">
        <title>Date Fields</title>

        <para>The date field is freely editable and jGnash will make the best attempt at interpreting an invalid entry,
        but the results are indeterminate. Clicking on the button to the right of the field will display a calendar
        dialog where you can select a date as well.</para>

        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../images/date-entry.png" scale="75"/>
            </imageobject>
          </inlinemediaobject>
        </para>

        <para>Also, dates can be modified using the keyboard shortcuts defined in the<link
        linkend="dateShortcuts">appendix</link>.</para>
      </section>

      <section xml:id="numberFields">
        <title>Number Fields</title>

        <para>Numerical entry in jGnash is as easy as typing the desired value into the field. Decimal separators are
        handled according to the configured locale.</para>

        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../images/basic-decimal-entry.png" scale="75"/>
            </imageobject>
          </inlinemediaobject>
        </para>

        <para>You may also enter arithmetic operators and calculate values within the entry field.</para>

        <para>The arithmetic operators that may be used are () + − ∗ /.</para>

        <para>Traditional arithmetic operator precedence is followed for all calculations.</para>

        <para>
          <inlinemediaobject>
            <imageobject>
              <imagedata fileref="../images/advanced-decimal-entry.png" scale="75"/>
            </imageobject>
          </inlinemediaobject>
        </para>
      </section>
    </section>

    <section xml:id="FileTypes">
      <title>File Types</title>

      <para>jGnash supports three file types for storing data. File types can be easily changed by using the <menuchoice>
          <guimenu>File</guimenu>

          <guimenuitem>Save As</guimenuitem>
        </menuchoice> command and naming the new file with the appropriate file extension.</para>

      <para>The current file will be saved in the new format and automatically opened.</para>

      <para>Regardless of file type used, jGnash automatically saves the data if changed every 30 seconds to minimize
      the chance of accidental data loss.</para>

      <note>
        <title>Client/Server</title>

        <para>If you are using jGnash in the Client/Server mode, all changes are committed immediately.</para>
      </note>

      <section>
        <title>Object Database</title>

        <para>The Object Database format is required when using the client / server functionality of jGnash. It may be
        used for a single user, but the binary file format described below is a better choice.</para>
      </section>

      <section>
        <title>XML File</title>

        <para>XML file format is human readable and easily read by other applications at the expense of a considerably
        larger file size. Memory usage is less when using the XML file format, but certain operations may take longer.
        The advantage of the XML file is easier parsing and manipulation of the file using another program external to
        jGnash. If you have a large amount of data, jGnash will use less system memory when using the XML file
        format.</para>

        <note>
          <title>Backups</title>

          <para>The XML format is also used for saving automatic backups of jGnash files if enabled.</para>
        </note>
      </section>

      <section>
        <title>Binary File</title>

        <para>The binary file format is the most compact file format and will open and close the quickest. This is the
        recommended file format if you do not need client / server functionality.</para>
      </section>
    </section>
  </chapter>

  <chapter xml:id="Budgets">
    <title>Budgets</title>

    <para>jGnash has a budgeting feature that makes it easy for you to define spending and income goals by account and
    bump those goals up against your actual transactions. A compact graphical overview of each budgeting period is
    provided to highlight how well you are following your budget based on selectable periods.</para>

    <para>Tracking how well you follow your budget can be an eye opening experience and can lead to better financial
    health.</para>

    <bridgehead>Budget Features</bridgehead>

    <itemizedlist>
      <listitem>
        <para>Multiple budgets are supported and may be copied making it easy to try out different scenarios and create
        year specific budgets if desired.</para>
      </listitem>

      <listitem>
        <para>Allowed accounts for budget are limited to Income and Expense accounts.</para>
      </listitem>

      <listitem>
        <para>Accounts may be excluded from showing in a budget by setting the exclude flag in the account properties
        dialog.</para>
      </listitem>

      <listitem>
        <para>The reporting period for budgets may be daily, weekly, bi-weekly, monthly, or quarterly and can be changed
        as needed.</para>
      </listitem>

      <listitem>
        <para>The per account budget goals may also be entered in daily, weekly, bi-weekly, monthly, or quarterly
        periods and are independent of the budget reporting period.</para>
      </listitem>

      <listitem>
        <para>The budget may be exported to a spreadsheet.</para>
      </listitem>
    </itemizedlist>

    <tip>
      <title>Budget Periods</title>

      <para>The reported period of the budget is independent of the per account budget goal period.</para>

      <para>Example: Your salary is paid in bi-weekly intervals, but you want to see your budget reported by month. You
      can change the period for the income account to weekly or daily and enter your salary.</para>

      <para>When reported by month, jGnash automatically handles the difference in the periods 1and distributes your
      bi-weekly salary income across monthly boundaries.</para>
    </tip>

    <section>
      <title>Graphical Overview</title>

      <para>The main budget panel is shown below.</para>

      <para>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/budget-overview.png" scale="65"/>
          </imageobject>
        </inlinemediaobject>
      </para>

      <para>The width of the account column is adjustable by placing the cursor between the Account header and the
      period header columns and then clicking and dragging the mouse cursor right or left.</para>

      <para>At the top of the panel, a toolbar exists that allows you to change how much information is displayed,
      modify the budgets, and export the active budget to a spreadsheet.</para>

      <para>The budget drop down list lets you quickly select between different budgets you have created. The
      <guibutton>Budget Manager</guibutton> button displays a dialog that let you create, duplicate, and delete
      budgets.</para>

      <para>The <guibutton>Properties</guibutton> button will display the dialog shown below with various options for
      the active budget.</para>

      <para>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/budget-properties.png" scale="75"/>
          </imageobject>
        </inlinemediaobject>
      </para>

      <para>The period used for the budget display can be changed in this dialog as well as the budget description. You
      may also select the account groups that are visible for the selected budget.</para>

      <para>The year spinner allows you to bump the selected budget up against the selected year's transaction data. The
      selected year also effects the calendar periods when editing period amounts.</para>

      <para>Double clicking on an account name to the left of the panel will display a dialog that allows you to change
      the account specific budget period and period amounts.</para>

      <para>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/budget-goal-dialog.png" scale="70"/>
          </imageobject>
        </inlinemediaobject>
      </para>

      <para>The Smart Fill panel may used to enter repeating patterns or fill in the amounts automatically based on the
      last 12 months. Alternatively, you may directly edit the amount of each period by clicking and typing in a table
      cell.</para>

      <para>The per account budget amounts as well as the <emphasis role="bold">Change</emphasis> and <emphasis
      role="bold">Remaining </emphasis> values are hierarchical in that the values of the child account are summed and
      are added to the parent account. If a parent account is not configured has a placeholder, it may also be assigned
      period goals that are inclusive of any children.</para>

      <para>At the bottom of each reported budget period, a summary by account group is displayed. To the right, a
      summary by account is displayed. The summary's made be disabled if desired by unselecting the appropriate
      checkboxes.</para>

      <para>The <guibutton>Export Spreadsheet</guibutton> button will export a file to your choice of an
      <filename>xls</filename> or <filename>xlsx</filename> file. The exported spreadsheet does contain formulas which
      makes it easier to manipulate the file externally.</para>
    </section>

    <section>
      <title>Budgeting Tips</title>

      <para>When planing a budget, you need to consider how you spend and receive your money versus how you want to
      report your budget.</para>

      <para>jGnash has to make assumptions when entering per account period amounts. Internally, jGnash is keeping a
      list of 366 days (365 + 1 leap day) per account with the list starting at the first calendar day of the
      year.</para>

      <para>When a period goal for an account is entered, the amount is averaged across each day of the period. Entry of
      amounts is also sensitive to the current year. If you select Monthly for the account period, the monthly boundary
      for days is established by the current year calendar months and the amount is then averaged across the number of
      days per each month.</para>

      <para>Averaging of periods has an impact on how exact the tracking of your budget is. If you choose to enter a
      monthly average for income, but are paid on certain days on the month, your budget will show slight variations
      through the year.</para>

      <para>If you want the budgeted vs. Remaining amounts to be exact for a particular account, then you will want to
      set the account period to be Daily and take the effort to enter your daily amount goals.</para>

      <para>You will not be able to export a spreadsheet when the report period is daily due to memory requirements and
      limitations of some spreadsheet applications.</para>
    </section>
  </chapter>

  <chapter xml:id="Reports">
    <title>Reports</title>

    <para>A variety of reports exist that present your financial history and status in different ways. There are
    currently three classes of reports available. Text reports can be exported and easily imported into a spreadsheet
    for advanced manipulation. Chart based reports may be altered and exported to a graphic file, or printed using the
    context sensitive pop-up menu. Tabular type reports may be printed or saved to various file formats including
    <filename>CSV</filename> or <filename>PDF</filename> files.</para>

    <section>
      <title>Tabular Reports</title>

      <para>Tabular reports are displayed in a specialized viewer that allows you to change the page and print or export
      the report. The font size of the displayed report can be changed from the toolbar of the report window.</para>

      <para>The fonts used to display the report may be changed in the <menuchoice>
          <guimenu>Tools</guimenu>

          <guimenuitem>Options</guimenuitem>
        </menuchoice> dialog shown below. The <guilabel>Proportional</guilabel> font is typically used for report
      headers and footers. The <guilabel>Monospace</guilabel> font, also called a fixed-width font, is used to display
      the reported values.</para>

      <para>
        <inlinemediaobject>
          <imageobject>
            <imagedata fileref="../images/font-options.png" scale="75"/>
          </imageobject>
        </inlinemediaobject>
      </para>

      <para>If a proportional spaced font is chosen for the <guilabel>Monospace</guilabel> font, numeric report values
      may not line up correctly in the report.</para>

      <tip>
        <title>Font Information</title>

        <para>Information on font types as well as a wide selection of freely available fonts can be found on the
        Internet. Once a new font is properly installed in your operating system, it will be available for use in jGnash
        the next time it is started.</para>
      </tip>
    </section>

    <section>
      <title>Tips</title>

      <para>Depending on your operating system, you may need to change the font type and font size to achieve the best
      looking report. The font size can be changed on the report toolbar and is remember for each report type.</para>

      <section>
        <title>Nothing displays in the report and I'm not getting any errors</title>

        <para>Try increasing your font size, and if that does not work, choose a different font. Depending on your
        operation system, fonts may not render correctly at reduced sizes.</para>
      </section>

      <section>
        <title>I get an error that tells me to reduce my font size</title>

        <para>The selected font size is too large to display the report correctly. You will need to choose a smaller
        font size. Many times, the column heading text may dictate the displayed width of a column. Try choosing a
        proportional font with condensed spacing. You may also want to check the default paper size and adjust if
        needed.</para>
      </section>

      <section>
        <title>My PDF exports are missing information or don't look correct on a different computers</title>

        <para>Not all fonts are able to be embedded within a <filename>PDF</filename> file. You may need to experiment
        with different fonts to achieve good portability. In most cases, the defaults jGnash chooses will give you good
        results.</para>
      </section>
    </section>
  </chapter>

  <chapter>
    <title>Plugins and JavaScript</title>

    <para>jGnash support the addition of JavaScript and Plugins to add additional functionality to the
    application.</para>

    <section>
      <title>Plugins</title>

      <para>Plugins are tightly integrated into jGnash, and once loaded, behave as if they are a standard part of the
      application. Plugins are coded in Java using a jGnash specific API as the entry point so they may be loaded into
      jGnash.</para>

      <para>Plugins are packaged into <filename>JAR</filename> files and are located within the
      <filename>plugins</filename> directory located in the directory jGnash is installed. Installation of a Plugin is
      as simple as placing the supplied JAR file into the <filename>plugins</filename> directory and restarting
      jGnash.</para>

      <para>The jGnash JavaDoc may be referenced if you are interested in creating a jGnash Plugin. The MT940 import is
      written as a standard Plugin and may be referenced as an example of how to write one.</para>
    </section>

    <section>
      <title>JavaScript</title>

      <para>In addition to use of Plugins, jGnash allows you to create and run JavaScript programs. The internals of the
      jGnash engine and some user interface functions can be accessed to create custom reports, create and modify
      transactions, etc.</para>

      <para>Running a JavaScript program is as simple as using <menuchoice>
          <guimenu>Tools</guimenu>

          <guimenuitem>Run JavaScript</guimenuitem>
        </menuchoice> command from the menu bar.</para>

      <para>Below is an example JavaScript program that displays the accounts in the currently loaded file and
      demonstrates how to display a simple dialog. To try the program, create a text file using your favorite editor
      with a name of your choice that ends with a .js extension. After creating the file, simply using the <menuchoice>
          <guimenu>Tools</guimenu>

          <guimenuitem>Run JavaScript</guimenuitem>
        </menuchoice> command to select the program and run it.</para>

      <programlisting language="java">importPackage(javax.swing);
                importPackage(Packages.jgnash.ui);
                importPackage(Packages.jgnash.engine);

                // helper function to print messages to the console
                function debug(message) {
                java.lang.System.out.println(message);
                }

                // show the console dialog to see the debug information
                ConsoleDialog.show();

                // this is how to get the default Engine instance
                var engine = EngineFactory.getEngine(EngineFactory.DEFAULT);

                // get a list of accounts
                var accountList = engine.getAccountList();

                // loop and print the account names to the console
                for (i = 0; i &lt; accountList.size(); i++)
                {
                var account = accountList.get(i);
                debug(account.getName());
                }

                // just to show how to use Swing
                var optionPane = JOptionPane.showMessageDialog(null, 'Hello, world!');
            </programlisting>

      <para>JavaScript programs have the advantage of not requiring the use of an IDE or Java compiler to create and
      test a program. The disadvantage is troubleshooting syntax and logic errors can be more difficult than writing a
      jGnash Plugin.</para>
    </section>
  </chapter>

  <chapter xml:id="commandline">
    <title>Command Line Options</title>

    <para xreflabel="Command Line Options">jGnash has several command line options for advanced users.</para>

    <bridgehead>Options</bridgehead>

    <variablelist>
      <varlistentry>
        <term>-enableEDT</term>

        <listitem>
          <para>Primarily used for development and debugging the graphical user interface. When enabled, this detects
          and warns of bad UI programing practice.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-file <option>filename</option></term>

        <listitem>
          <para>Specifies a file to load at startup.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-opengl</term>

        <listitem>
          <para>Enables OpenGL support for platforms and video drivers that support it. Disable use if strange graphics
          errors occur.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-portable</term>

        <listitem>
          <para>If portable is specified on the command line, jGnash preferences will be stored to a file name <emphasis
          role="bold">pref.xml</emphasis>instead of using the system registry. Use of this option is intended for users
          who want to run jGnash from a thumb drive on multiple computers and maintain their preferences without using
          the system registry. The <emphasis role="bold">pref.xml</emphasis> file will usually be stored at the location
          jGnash was started from.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-portableFile <option>filename</option></term>

        <listitem>
          <para>If you don't like the location the <emphasis role="bold">pref.xml</emphasis> file is stored, or wish to
          use a different name, use this option to change location and name to suit.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-uninstall</term>

        <listitem>
          <para>Removes all registry and configuration settings jGnash has created. This will not have any effect if you
          have been using the <emphasis role="bold">-portable</emphasis> option.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <bridgehead>Client/Server Options</bridgehead>

    <variablelist>
      <varlistentry>
        <term>-server <option>filename</option></term>

        <listitem>
          <para>Starts the jGnash server using the specified file. The file must exist and not be in use by another
          program. A user interface will not be displayed. The file must be in the Object Database (jdb) format.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-client <option>servername</option></term>

        <listitem>
          <para>Starts jGnash and automatically connects to the specified server. If running on the same computer as the
          server, localhost may be used as the name of the server.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-user <option>name</option></term>

        <listitem>
          <para>The user name that the client must correctly specify to connect to the jGnash server.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-password <option>password</option></term>

        <listitem>
          <para>The password that the client must correctly specify to connect to the jGnash server.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>-port <option>port</option></term>

        <listitem>
          <para>An empty port for network communications. The specified port and port + 1 may not be used by another
          application at the same time. The default port is 5300.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <tip>
      <title>Open Dialog</title>

      <para>It is possible to start the jGnash client and specify the server, user, and password settings from the
      <menuchoice>
          <guimenu>File</guimenu>

          <guimenuitem>Open</guimenuitem>
        </menuchoice> dialog.</para>
    </tip>

    <bridgehead>Client/Server Examples</bridgehead>

    <para>
      <emphasis role="bold">Start the jGnash server using the default port</emphasis>

      <screen>java -jar jGnash2.jar -server
                <replaceable>/home/craig/jgnash.jdb</replaceable>
                -user
                <replaceable>craig</replaceable>
                -password<replaceable>fh56d</replaceable>y
            </screen>

      <emphasis role="bold">Start the jGnash client and connect to the local server</emphasis>

      <screen>java -jar jGnash2.jar -client
                <replaceable>localhost</replaceable>
                -user
                <replaceable>craig</replaceable>
                -password<replaceable>fh56</replaceable>dy
            </screen>
    </para>

    <sidebar>
      <para>Although user name and password options exist for Client/Server operation, they have no effect when running
      jGnash as a standalone application. The use of the password and user name is a simple mechanism to prevent someone
      unwanted from connection to the jGnash server. Their use does not provide any means of encryption.</para>
    </sidebar>
  </chapter>

  <chapter>
    <title>Frequently Asked Questions</title>

    <qandaset defaultlabel="qanda">
      <qandaentry>
        <question>
          <para>What happened to transaction categories?</para>
        </question>

        <answer>
          <para>Most commercial personal finance applications use categories to help track spending and income. jGnash
          uses Income and Expense accounts instead of categories for tracking where your money comes from and where it
          goes.</para>
        </answer>
      </qandaentry>

      <qandaentry>
      <question>
        <para>Can I use multiple currencies?</para>
      </question>

      <answer>
        <para>Yes! The Tools|Currencies|Add/Remove menu will let you add additional currencies.</para>

        <para>After adding new currencies, simple create new accounts that use the new currency. When creating a
        transaction between accounts with different currencies, a field for the exchange rate will be enabled.</para>
      </answer>
      </qandaentry>

      <qandaentry>
        <question>
          <para>How do I add Securities / Stocks to my Investment and Mutual Fund Account?</para>
        </question>

        <answer>
          <para>First, you need to have created your stocks/securities. Tools|Commodities:Create / Modify</para>

          <para>When creating the securities, the scale field must be filled in and the prefix field should be filled
          in. The scale will general be the same scale as the currency the securities value is reported in. In most
          cases, a scale of 2 will work fine. For the prefix, the currency prefix of the reported value should be
          used.</para>

          <para>After creating your securities, you can go back and modify the existing account or select the securities
          when creating a new account. Use the Securities button in the dialog to make changes.</para>
        </answer>
      </qandaentry>
    </qandaset>
  </chapter>

  <appendix xml:id="keyboard">
    <title>Keyboard Shortcuts</title>

    <para>This Appendix contains application keyboard shortcuts that are available to you throughout jGnash</para>

    <para>Depending on your operating system and how you have it configured, other shortcuts may be available that
    perform the same function.</para>

    <table>
      <title>Shortcut Keys</title>

      <tgroup cols="2">
        <thead>
          <row>
            <entry>Keys</entry>

            <entry>Function</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>
              <keycap>CTRL-F4</keycap>
            </entry>

            <entry>Closes the active register window if you have one open</entry>
          </row>

          <row>
            <entry>
              <keycap>F1</keycap>
            </entry>

            <entry>Displays the Help dialog</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <table>
      <title>Editing Keys</title>

      <tgroup cols="2">
        <thead>
          <row>
            <entry>Keys</entry>

            <entry>Function</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry>
              <keycap>CTRL-C</keycap>
            </entry>

            <entry>Copy</entry>
          </row>

          <row>
            <entry>
              <keycap>CTRL-X</keycap>
            </entry>

            <entry>Cut</entry>
          </row>

          <row>
            <entry>
              <keycap>CTRL-V</keycap>
            </entry>

            <entry>Paste</entry>
          </row>
        </tbody>
      </tgroup>
    </table>

    <table xml:id="dateShortcuts">
      <title>Date Entry Shortcut Keys</title>

      <tgroup cols="2">
        <thead>
          <row>
            <entry>Keys</entry>

            <entry>Function</entry>
          </row>
        </thead>

        <tbody>
          <row>
            <entry><keycap>+</keycap>, <keycap>↑</keycap></entry>

            <entry>Increase the date by one day</entry>
          </row>

          <row>
            <entry><keycap>-</keycap>, <keycap>↓</keycap></entry>

            <entry>Decrease the date by one day</entry>
          </row>

          <row>
            <entry>
              <keycap>PgUp</keycap>
            </entry>

            <entry>Increase the date by one month</entry>
          </row>

          <row>
            <entry>
              <keycap>PgDn</keycap>
            </entry>

            <entry>Decrease the date by one month</entry>
          </row>

          <row>
            <entry><keycap>t</keycap>, <keycap>T</keycap></entry>

            <entry>Change to todays date</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </appendix>

  &gpl;

  &fdl;
</book>
